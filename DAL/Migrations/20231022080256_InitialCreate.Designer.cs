// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(CarRentalDBContext))]
    [Migration("20231022080256_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DTO.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DTO.DonDatXe", b =>
                {
                    b.Property<int>("DonDatXeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonDatXeId"));

                    b.Property<decimal>("GiaThue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("NhienLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianThue")
                        .HasColumnType("datetime2");

                    b.Property<int>("XeOtoId")
                        .HasColumnType("int");

                    b.HasKey("DonDatXeId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("XeOtoId");

                    b.ToTable("DonDatXes");
                });

            modelBuilder.Entity("DTO.DonDatXe_TinhNang", b =>
                {
                    b.Property<int>("DonDatXeId")
                        .HasColumnType("int");

                    b.Property<int>("TinhNangId")
                        .HasColumnType("int");

                    b.HasKey("DonDatXeId", "TinhNangId");

                    b.HasIndex("TinhNangId");

                    b.ToTable("DonDatXe_TinhNangs");
                });

            modelBuilder.Entity("DTO.KhachHang", b =>
                {
                    b.Property<int>("KhachHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhachHangId"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KhachHangId");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("DTO.LoaiXe", b =>
                {
                    b.Property<int>("LoaiXeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoaiXeId"));

                    b.Property<string>("TenLoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiXeId");

                    b.ToTable("LoaiXes");
                });

            modelBuilder.Entity("DTO.TinhNangXe", b =>
                {
                    b.Property<int>("TinhNangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TinhNangId"));

                    b.Property<string>("TenTinhNang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TinhNangId");

                    b.ToTable("TinhNangXes");
                });

            modelBuilder.Entity("DTO.XeOto", b =>
                {
                    b.Property<int>("XeOtoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("XeOtoId"));

                    b.Property<decimal>("GiaThue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HangXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiXeId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("XeOtoId");

                    b.HasIndex("LoaiXeId");

                    b.ToTable("XeOtos");
                });

            modelBuilder.Entity("DTO.DonDatXe", b =>
                {
                    b.HasOne("DTO.KhachHang", "KhachHang")
                        .WithMany("DonDatXes")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DTO.XeOto", "XeOto")
                        .WithMany("DonDatXes")
                        .HasForeignKey("XeOtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("XeOto");
                });

            modelBuilder.Entity("DTO.DonDatXe_TinhNang", b =>
                {
                    b.HasOne("DTO.DonDatXe", "DonDatXe")
                        .WithMany("DonDatXe_TinhNangs")
                        .HasForeignKey("DonDatXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DTO.TinhNangXe", "TinhNangXe")
                        .WithMany("DonDatXe_TinhNangs")
                        .HasForeignKey("TinhNangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonDatXe");

                    b.Navigation("TinhNangXe");
                });

            modelBuilder.Entity("DTO.XeOto", b =>
                {
                    b.HasOne("DTO.LoaiXe", "LoaiXe")
                        .WithMany("XeOtos")
                        .HasForeignKey("LoaiXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiXe");
                });

            modelBuilder.Entity("DTO.DonDatXe", b =>
                {
                    b.Navigation("DonDatXe_TinhNangs");
                });

            modelBuilder.Entity("DTO.KhachHang", b =>
                {
                    b.Navigation("DonDatXes");
                });

            modelBuilder.Entity("DTO.LoaiXe", b =>
                {
                    b.Navigation("XeOtos");
                });

            modelBuilder.Entity("DTO.TinhNangXe", b =>
                {
                    b.Navigation("DonDatXe_TinhNangs");
                });

            modelBuilder.Entity("DTO.XeOto", b =>
                {
                    b.Navigation("DonDatXes");
                });
#pragma warning restore 612, 618
        }
    }
}
